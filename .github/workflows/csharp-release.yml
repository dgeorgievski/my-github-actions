name: GitHub release for .Net application
on:
  workflow_call:
    inputs:
      app-name:
        description: 'Name of the .NET '
        required: true
        type: string
      language:
        description: '.Net programming language used in the application. Default csharp; can be csharp or fsharp.'
        required: false
        type: string
        default: 'csharp'
      dotnet-version:
        description: 'Version of .NET SDK to use. Default 9.0.300; can be any valid .NET SDK version.'
        required: false
        type: string
        default: '9.0.300'
      registry:
        description: 'Container registry to push the image to. Default ghcr.io.'
        required: false
        type: string
        default: 'ghcr.io'
      docker-context:
        description: 'Context for Docker build. Default "."'
        required: false
        type: string
        default: '.'
      docker-file:
        description: 'Dockerfile path. Default ./Dockerfile; can be set to a custom Dockerfile path'
        required: false
        type: string
        default: './Dockerfile'
      docker-push:
        description: 'Push the Docker image to the registry. Default true'
        required: false
        type: boolean
        default: true
      run-trivy:
        description: 'Run Trivy Scan'
        required: false
        default: true
        type: boolean
    
permissions:
  actions: read
  contents: write
  security-events: write
  packages: write
      
jobs:
  release:
    name: Release
    runs-on: 'ubuntu-latest'
    outputs:
      app-version: ${{ steps.versionize.outputs.app-version }}
    steps:
      - uses: dgeorgievski/my-github-actions/.github/actions/dotnet/release@test-cs
        id: versionize
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          git-fetch-depth: 0   
          git-fetch-tags: "true"
          token: ${{ secrets.GITHUB_TOKEN }}  

  package:
    name: Package ${{ inputs.app-name }}
    needs: release
    if: needs.release.outputs.app-version != '' 
    runs-on: 'ubuntu-latest'
    steps:
      - uses: dgeorgievski/my-github-actions/.github/actions/dotnet/package@test-cs
        with:
          language: ${{ inputs.language }}
          app-name: ${{ inputs.app-name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          context: ${{ inputs.docker-context }}
          docker-file: ${{ inputs.docker-file }}
          image-tag: ${{ needs.release.outputs.app-version }}
          registry: ${{ inputs.registry }}
          push: ${{ inputs.docker-push }}
  
  docker-scan:
    runs-on: ubuntu-latest
    needs: [release, package]
    if: needs.release.outputs.app-version != '' 
    permissions:
      contents: read
      packages: read 
    steps:
      # This job scans the Docker image for vulnerabilities using Trivy
      - uses: dgeorgievski/my-github-actions/.github/actions/dotnet/security-scan/trivy@test-cs
        if: ${{ inputs.run-trivy == true }}
        with:
          registry: ${{ inputs.registry }}
          image-tag: ${{ needs.release.outputs.app-version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          severity: 'CRITICAL,HIGH'
